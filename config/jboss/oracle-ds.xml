<?xml version="1.0" encoding="UTF-8"?>

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  JBoss Server Configuration                                           -->
<!--                                                                       -->
<!-- ===================================================================== -->

<!-- $Id: oracle-ds.xml 63175 2007-05-21 16:26:06Z rrajesh $ -->
<!-- ==================================================================== -->
<!--  Datasource config for Oracle originally from Steven Coy             -->
<!-- ==================================================================== -->


<datasources>

  <local-tx-datasource>
    <jndi-name>jdbc/CCDS</jndi-name>
    <use-java-context>false</use-java-context>
    <connection-url>jdbc:oracle:thin:@dev1vdb1:1541:cccd1</connection-url>
    <driver-class>oracle.jdbc.driver.OracleDriver</driver-class>
    <user-name>cc_user</user-name>
    <password>cc_user</password>
    <!-- Uses the pingDatabase method to check a connection is still valid before handing it out from the pool 
    <valid-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker</valid-connection-checker-class-name> -->
    <!-- Checks the Oracle error codes and messages for fatal errors -->
    <exception-sorter-class-name>org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter</exception-sorter-class-name>
        <!-- sql to call when connection is created 
        <new-connection-sql>select systimestamp from dual</new-connection-sql> -->

        <!-- sql to call on an existing pooled connection when it is obtained from pool - the OracleValidConnectionChecker is prefered 
        <check-valid-connection-sql>select systimestamp from dual</check-valid-connection-sql> -->

      <!-- corresponding type-mapping in the standardjbosscmp-jdbc.xml -->
      <metadata>
         <type-mapping>Oracle9i</type-mapping>
      </metadata>
 <!-- pooling parameters --> 
   <min-pool-size>1</min-pool-size> 
   <max-pool-size>2</max-pool-size> 
   <blocking-timeout-millis>30000</blocking-timeout-millis> 
   <idle-timeout-minutes>15</idle-timeout-minutes> 
 <!-- performance related parameters 
   <transaction-isolation>TRANSACTION_READ_COMMITED</transaction-isolation>
   <track-statements>false</track-statements>
 -->
   <prepared-statement-cache-size>50</prepared-statement-cache-size>
   </local-tx-datasource>


  <local-tx-datasource>
    <jndi-name>jdbc/CCCSHAREDDS</jndi-name>
    <use-java-context>false</use-java-context>
    <connection-url>jdbc:oracle:thin:@dev1vdb1:1541:cccd1</connection-url>
    <driver-class>oracle.jdbc.driver.OracleDriver</driver-class>
    <user-name>cccserv_ext</user-name>
    <password>cccserv_ext</password>
    <!-- Uses the pingDatabase method to check a connection is still valid before handing it out from the pool 
    <valid-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker</valid-connection-checker-class-name> -->
    <!-- Checks the Oracle error codes and messages for fatal errors -->
    <exception-sorter-class-name>org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter</exception-sorter-class-name>
        <!-- sql to call when connection is created 
        <new-connection-sql>select systimestamp from dual</new-connection-sql> -->

        <!-- sql to call on an existing pooled connection when it is obtained from pool - the OracleValidConnectionChecker is prefered 
        <check-valid-connection-sql>select systimestamp from dual</check-valid-connection-sql> -->

      <!-- corresponding type-mapping in the standardjbosscmp-jdbc.xml -->
      <metadata>
         <type-mapping>Oracle9i</type-mapping>
      </metadata>
 <!-- pooling parameters --> 
   <min-pool-size>1</min-pool-size> 
   <max-pool-size>2</max-pool-size> 
   <blocking-timeout-millis>30000</blocking-timeout-millis> 
   <idle-timeout-minutes>15</idle-timeout-minutes> 
 <!-- performance related parameters 
   <transaction-isolation>TRANSACTION_READ_COMMITED</transaction-isolation>
   <track-statements>false</track-statements>
 -->
   <prepared-statement-cache-size>50</prepared-statement-cache-size>
   </local-tx-datasource>


  <local-tx-datasource>
    <jndi-name>jdbc/APPSDS</jndi-name>
    <use-java-context>false</use-java-context>
    <connection-url>jdbc:oracle:thin:@dev1vdb1:1525:oad1</connection-url>
    <driver-class>oracle.jdbc.driver.OracleDriver</driver-class>
    <user-name>cust</user-name>
    <password>cust</password>
    <!-- Uses the pingDatabase method to check a connection is still valid before handing it out from the pool 
    <valid-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker</valid-connection-checker-class-name> -->
    <!-- Checks the Oracle error codes and messages for fatal errors -->
    <exception-sorter-class-name>org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter</exception-sorter-class-name>
        <!-- sql to call when connection is created 
        <new-connection-sql>select systimestamp from dual</new-connection-sql> -->

        <!-- sql to call on an existing pooled connection when it is obtained from pool - the OracleValidConnectionChecker is prefered 
        <check-valid-connection-sql>select systimestamp from dual</check-valid-connection-sql> -->

      <!-- corresponding type-mapping in the standardjbosscmp-jdbc.xml -->
      <metadata>
         <type-mapping>Oracle9i</type-mapping>
      </metadata>
 <!-- pooling parameters --> 
   <min-pool-size>1</min-pool-size> 
   <max-pool-size>2</max-pool-size> 
   <blocking-timeout-millis>30000</blocking-timeout-millis> 
   <idle-timeout-minutes>15</idle-timeout-minutes> 
 <!-- performance related parameters 
   <transaction-isolation>TRANSACTION_READ_COMMITED</transaction-isolation>
   <track-statements>false</track-statements>
 -->
   <prepared-statement-cache-size>50</prepared-statement-cache-size>
   </local-tx-datasource>

</datasources>
